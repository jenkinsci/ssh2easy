<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define"
          xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:local="local">

    <j:set var="id" value="${h.generateId()}"/>

    <table id="assignPublicMembers" class="center-align global-matrix-authorization-strategy-table" name="data">

      <!-- The first row will show grouping -->
      <tr class="group-row">
        <td class="start" />
        <td class="pane-header blank">
          ${%User/Groups}
        </td>
        <j:forEach var="project" items="${publicAcls}">
          <td class="pane-header">
            ${project.key.projectName}
          </td>
        </j:forEach>
        <td class="stop" />
      </tr>
      <j:set var="nbAssignedGlobalMemberses" value="${0}" />
      <j:forEach var="sid" items="${globalSIDs}">
        <tr name="[${sid}]" class="permission-row">
          <local:userRow sid="${sid}" title="${sid}" global="${true}" />
        </tr>
        <j:set var="nbAssignedGlobalMemberses" value="${nbAssignedGlobalMemberses+1}" />
      </j:forEach>
      <tr name="anonymous">
        <local:userRow sid="anonymous" title="${%Anonymous}" global="${true}"/>
      </tr>
      <tr id="${id}" style="display:none" class="permission-row">
        <local:userRow global="${true}" />
      </tr>
      <!-- The last row is used to repeat the header (if more than 19+1 lines) -->
      <j:if test="${nbAssignedGlobalMemberses ge 19}">
        <tr class="group-row">
          <td class="start" />
          <td class="pane-header blank">
            ${%User/group}
          </td>
          <j:forEach var="project" items="${publicAcls}">
            <td class="pane-header">
              ${project.key.name}
            </td>
          </j:forEach>
          <td class="stop" />
        </tr>
      </j:if>
    </table>

    <br /><br />
    <f:entry title="${%User/group to add}">
      <f:textbox type="text" id="${id}text" />
    </f:entry>
    <f:entry>
      <input type="button" value="${%Add}" id="${id}button"/>
    </f:entry>

    <script>
      var tableHighlighter;
      (function() {
        <!-- place master outside the DOM tree so that it won't creep into the submitted form -->
        var master = document.getElementById('${id}');
        var table = master.parentNode;
        table.removeChild(master);

        makeButton($$('${id}button'), function (e) {
          <!-- when 'add' is clicked... -->
          var name = $$('${id}text').value;
          if(name=="") {
            alert("Please enter a role name");
            return;
          }
          if(findElementsBySelector(table,"TR").find(function(n){return n.getAttribute("name")=='['+name+']';})!=null) {
            alert("Entry for '"+name+"' already exists");
            return;
          }

          if(document.importNode!=null)
            copy = document.importNode(master,true);
          else
            copy = master.cloneNode(true); <!-- for IE -->
            <!-- fix the bug for remove cann't work bug -->
          copy.removeAttribute("id");
          copy.removeAttribute("style");
          copy.childNodes[1].innerHTML = name;
          copy.setAttribute("name",'['+name+']');
          <j:if test="${nbAssignedGlobalMemberses lt 19}">
            table.appendChild(copy);
          </j:if>
          <j:if test="${nbAssignedGlobalMemberses ge 19}">
            table.insertBefore(copy,table.childNodes[table.rows.length-1]);
          </j:if>
          tableHighlighter.scan(copy);
          Behaviour.applySubtree(findAncestor(table,"TABLE"));
        });
      })();

      Event.observe(window, 'load', function(event) {
         tableHighlighter = new TableHighlighter('assignPublicMembers', 0, 1);
      });

      var deleteAssignedGlobalRole = function(e) {
        e.onclick = function() {
          var tr = findAncestor(this,"TR");
          tr.parentNode.removeChild(tr);
          return false;
        }
        e = null; <!-- avoid memory leak -->
      }
      Behaviour.register({
        "#assignPublicMembers TD.start A" : deleteAssignedGlobalRole,
        "#assignPublicMembers TD.stop A" : deleteAssignedGlobalRole,
        "#assignPublicMembers TR.permission-row" : function(e) {
          FormChecker.delayedCheck("${descriptorPath}/checkName?value="+encodeURIComponent(e.getAttribute("name")),"GET",e.childNodes[1]);
        }
      });
    </script>
</j:jelly>
